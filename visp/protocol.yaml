# Canvas
# ------

- action: create
  timestamp: int/float
  object:
    type: canvas
    id: str
  parameters:
    width: int # Physical pixel width
    height: int # Physical pixel height
    dpr: float
    dpi: float # dots per inch (logical size)
    offscreen: bool

- action: create
  timestamp: int/float
  object:
    type: viewport
    id: str
  parameters:
    canvas_id: str
    x: int
    y: int
    width: int # Logical pixel width
    height: int # Logical pixel height  

- action: create
  timestamp: int/float
  object:
    type: plot?
    id: str
  parameters:
     visuals: visual ids
     viewport: viewport-id
     transforms: <list of transform ids>


  

# Visual
# ------

- action: create
  timestamp: int/float
  object:
    type: visual
    id: str
  parameters:
    canvas_id: str
    type: str
    params/flags: dict??

# Array
# -----

- action: create
  timestamp: int/float
  object:
    type: array
    id: str
  parameters:
    ndim: int
    shape: list
    dtype: enum/str?

- action: update
  timestamp: int/float
  object:
    type: array
    id: str
  parameters:
    type: direct/custom/...
    offset: list
    shape: list
    <type-specific>

# Transforms
# ----------

- action: create
  timestamp: int/float
  object:
    type: transform
    id: str
  parameters:
    type: direct/custom/...
    <type-specific>

# Props
# -----

- action: update
  timestamp: int/float
  object:
    type: visual
    id: str
  parameters:
    type: enum
    array_id: str
    offset: list
    shape: list
    transforms: [list_ids]

# Draw
# ----

- action: render  # i.e. screenshot
  timestamp: int/float
  object:
    type: canvas
    id: str
  parameters:
    x: int
    y: int
    width: int
    height: int
    format: png


# Definitions of enums and types

enums:
  format = ["f4", "2xf4", "3xf4", "4xf4"]
  visual_types = ["points", "line"]
